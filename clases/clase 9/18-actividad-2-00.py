# Realiza una funci칩n llamada area_rectangulo() que devuelva el 치rea del rect치ngulo a partir de una base y una altura. Calcula el 치rea de un rect치ngulo de 15 de base y 10 de altura

# 游둟 Ayuda: El 치rea de un rect치ngulo se obtiene al multiplicar la base por la altura.

# Realiza una funci칩n llamada area_circulo() que devuelva el 치rea de un c칤rculo a partir de un radio. Calcula el 치rea de un c칤rculo de 5 de radio

# 游둟 Ayuda: El 치rea de un c칤rculo se obtiene al elevar el radio a dos y multiplicando el resultado por el n칰mero pi. Puedes utilizar el valor 3.14159 como pi o importarlo del m칩dulo math.

#------------------------------------------------------------------------------------#

# Realiza una funci칩n llamada relacion() que a partir de dos n칰meros cumpla lo siguiente:

# Si el primer n칰mero es mayor que el segundo, debe devolver 1.
# Si el primer n칰mero es menor que el segundo, debe devolver -1.
# Si ambos n칰meros son iguales, debe devolver un 0.

# Comprueba la relaci칩n entre los n칰meros: '5 y 10', '10 y 5' y '5 y 5'

# Realiza una funci칩n llamada intermedio() que, a partir de dos n칰meros, devuelva su punto intermedio:
# 游둟 Ayuda: El n칰mero intermedio de dos n칰meros corresponde a la suma de los dos n칰meros dividida entre 2

# Comprueba el punto intermedio entre -12 y 24


#------------------------------------------------------------------------------------#

# Realiza una funci칩n llamada recortar() que reciba tres par치metros. El primero es el n칰mero a recortar, el segundo es el l칤mite inferior y el tercero el l칤mite superior. La funci칩n tendr치 que cumplir lo siguiente:

# Devolver el l칤mite inferior si el n칰mero es menor que 칠ste
# Devolver el l칤mite superior si el n칰mero es mayor que 칠ste.
# Devolver el n칰mero sin cambios si no se supera ning칰n l칤mite.
# Comprueba el resultado de recortar 15 entre los l칤mites 0 y 10

# Realiza una funci칩n separar() que tome una lista de n칰meros enteros y devuelva dos listas ordenadas. La primera con los n칰meros pares, y la segunda con los n칰meros impares:
# 游둟 Ayuda: Para ordenar una lista autom치ticamente puedes usar el m칠todo .sort()


#------------------------------------------------------------------#

# Funci칩n area_rectangulo()

def area_rectangulo(base, altura):
    return base * altura

# C치lculo del 치rea de un rect치ngulo de 15 de base y 10 de altura
area = area_rectangulo(15, 10)
print(f"El 치rea del rect치ngulo es: {area}")

#------------------------------------------------------------------#

# Funci칩n area_circulo()

import math

def area_circulo(radio):
    return math.pi * radio ** 2

# C치lculo del 치rea de un c칤rculo de 5 de radio
area = area_circulo(5)
print(f"El 치rea del c칤rculo es: {area}")

#------------------------------------------------------------------#

# Funci칩n relacion()
def relacion(num1, num2):
    if num1 > num2:
        return 1
    elif num1 < num2:
        return -1
    else:
        return 0

# Comprobaci칩n de la relaci칩n entre los n칰meros
print(relacion(5, 10))  # Deber칤a devolver -1
print(relacion(10, 5))  # Deber칤a devolver 1
print(relacion(5, 5))   # Deber칤a devolver 0

#------------------------------------------------------------------#

# Funci칩n intermedio()

def intermedio(num1, num2):
    return (num1 + num2) / 2

# Comprobaci칩n del punto intermedio entre -12 y 24
punto_intermedio = intermedio(-12, 24)
print(f"El punto intermedio es: {punto_intermedio}")

#------------------------------------------------------------------#

# Funci칩n recortar()

def recortar(numero, limite_inferior, limite_superior):
    if numero < limite_inferior:
        return limite_inferior
    elif numero > limite_superior:
        return limite_superior
    else:
        return numero

# Comprobaci칩n del resultado de recortar 15 entre los l칤mites 0 y 10
resultado = recortar(15, 0, 10)
print(f"El resultado de recortar es: {resultado}")

#------------------------------------------------------------------#

# Funci칩n separar()

def separar(lista):
    pares = [num for num in lista if num % 2 == 0]
    impares = [num for num in lista if num % 2 != 0]
    pares.sort()
    impares.sort()
    return pares, impares

# Comprobaci칩n de la funci칩n separar
lista = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
pares, impares = separar(lista)
print(f"Pares: {pares}")
print(f"Impares: {impares}")

#------------------------------------------------------------------#